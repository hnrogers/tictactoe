match logic

- take turn
- check win

player 1 odd #s
player 2 even #s

have a specific turn function we call each turn, 
iterate turn number at the end of a successful function

function match(player1, player2, gameboard) {
    let matchEnd = false;
    let turnCounter = 1;

    while (matchEnd === false) {

    }
}

function turn(tc) {
    if (tc % 2 !== 0) {
        
    }
}


I could just plan out every possible win condition for each space

ex: 

__|__|__
__|__|__
  |  |

  Eight = [6, 7, 8], [0, 4, 8], [2, 5, 8]

if (turnCouinter >- 5) {

    switch (playerSelection) {
        case: '1':
            // blahblah
        ...
        case: '8':
            matchEnd = checkWin(playerSelection);

    }
}


checkWin function:

const arr0 = 0;
const arr1 = 1;
const arr2 = 2;
const arr3 = 3;

// min 2 win conditons, max is 4. rules below

    const zero = [[0, 1, 2], [0, 4, 8], [0, 3, 6]];
    const one = [[0, 1, 2], [1, 4, 7]];
    const two = [[0, 1, 2], [2, 5, 8], [2, 4, 6]];
    const three = [[0, 3, 6], [3, 4, 5]];
    const four = [[0, 4, 8], [1, 4, 7], [2, 4, 6], [3, 4, 5]];
    const five = [[2, 5, 8], [3, 4, 5]];
    const six = [[6, 7, 8], [2, 4, 6], [0, 3, 6]];
    const seven = [[6, 7, 8], [1, 4, 7]];
    const eight = [[6, 7, 8], [0, 4, 8], [2, 5, 8]];

/*

let x_or_o = turn % 2 != 0 : "X" : "O";

__|__|__
__|__|__
  |  |

*/


for (let i = 0; i < 3; i++) {

}

  - checkWin function should return bool to end game or not
  - winner is determined on what turn number
  - odd number turn ALWAYS x, evens ALWAYS O
    - this logic will be assumed for *every* function


// connecting it!
- 9 squares (flexbox?)
- click square to do space
- option to play as guest only at first

- set all squares to same class and onclick closest element?


> the trigger is click

0. start match button
1. user clicks square
    - eventListener
2. checkAvailability function
    - continue if taken
3. new pick space function that
    - changes value in html table
    - change value in gameboard.board
    - no longer need possibleMoves?
4. starting turn 5, checkWin function
5. when turn 9 ends, draw if no winner
6. new awarding function


> future improvements

1. create user
2. check scores
3. log out user




document.getElementById("zero").addEventListener("click", () => {
    document.getElementById("zero").innerText = "X";
})
document.getElementById("one").addEventListener("click", () => {
    document.getElementById("one").innerText = "X";
})
document.getElementById("two").addEventListener("click", () => {
    document.getElementById("two").innerText = "X";
})
document.getElementById("three").addEventListener("click", () => {
    document.getElementById("three").innerText = "X";
})
document.getElementById("four").addEventListener("click", () => {
    document.getElementById("four").innerText = "X";
})
document.getElementById("five").addEventListener("click", () => {
    document.getElementById("five").innerText = "X";
})
document.getElementById("six").addEventListener("click", () => {
    document.getElementById("six").innerText = "X";
})
document.getElementById("seven").addEventListener("click", () => {
    document.getElementById("seven").innerText = "X";
})
document.getElementById("eight").addEventListener("click", () => {
    document.getElementById("eight").innerText = "X";
})

